name: Typescript Pacakage CI

on:
  workflow_call:
    inputs:
      auto-merge-exclude:
        description: 'A semicolon seperated list of packages that you do not want to be auto-merged.'
        required: false
        default: ''
        type: string
      license-check:
        description: 'Check licenses.'
        required: false
        type: boolean
        default: false
      lint:
        description: 'Set to true to run linting scripts.'
        required: false
        default: false
        type: boolean

jobs:
  dependency-review:
    name: Dependency Review
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Dependency review
        uses: actions/dependency-review-action@v2

  license-check:
    if: >
      !failure() &&
      !cancelled() &&
      inputs.license-check == true
    name: Check Licenses
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup Node ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm i --ignore-scripts

      - name: Check Licenses
        run: ${{ format('npx license-checker --production --summary --onlyAllow="MIT;{0}"', inputs.license-check-allowed-additional) }}

  lint: 
    name: Lint Code
    if: >
      !failure() &&
      !cancelled() &&
      inputs.lint == true
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
    strategy:
      matrix:
        node-version: [lts/*]
        os: [ubuntu-latest]

    steps:
      - name: Check out repo
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup Node ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm i --ignore-scripts

      - name: Run lint checker
        run: npm run lint
      
  build:
    name: Build with tsup
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
    strategy:
      matrix:
        node-version: [lts/*]
        os: [ubuntu-latest]

    steps:
      - name: Check out repo
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup Node ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm i --ignore-scripts

      - name: Run build
        run: npm run build

      - name: Run check-exports
        run: npm run check-exports

  test:
    name: Test
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
    strategy:
      matrix:
        node-version: [lts/*]
        os: [ubuntu-latest]

    steps:
      - name: Check out repo
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup Node ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm i --ignore-scripts

      - name: Run tests
        run: npm test

  automerge:
    name: Automerge Dependabot PRs
    if: >
        github.event_name == 'pull_request' &&
        github.event.pull_request.user.login == 'dependabot[bot]'
    needs: test
    permissions:
      pull-requests: write
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: fastify/github-action-merge-dependabot@v3
        with:
          exclude: ${{ inputs.auto-merge-exclude }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

